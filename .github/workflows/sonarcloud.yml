# Code Quality & Coverage with SonarCloud

name: SonarCloud

on:
  push:
    branches: [ master ]
  workflow_dispatch: # Allow manual runs

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-24.04 # set env

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # get code from repo
        with:
          fetch-depth: 0 # get full history, needed by sonarcloud
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4 # install SDK
        with:
          dotnet-version: '7.0.x'
      
      # Instructions given by sonarcloud
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Restore NuGet dependencies
        run: dotnet restore AuctionSystem.sln

      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"KevinShemili_AuctionSystem" \
            /o:"kevinshemili" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.scanner.scanAll=false \
            /d:sonar.cs.opencover.reportsPaths="${{ github.workspace }}/unit-coverage.opencover.xml,${{ github.workspace }}/integration-coverage.opencover.xml" \
            /d:sonar.coverage.exclusions="**/*Tests*.cs,**/obj/**,**/bin/**,**/Migrations/**,**/EntityConfigurations/**,**/Domain/**,**/WebAPI/**,**/Email/**,**/Application/Common/**,**/Infrastructure/Broadcast/**,**/Infrastructure/Authorization/**,**/DependencyConfigurations/**,**/Mappings/**,**/DatabaseContext.*,**/ModelBuilderExtension.*" \
            /d:sonar.exclusions="**/obj/**,**/bin/**,**/*Tests*.cs,**/Migrations/**" \
            /d:sonar.issue.ignore.multicriteria=e1,e2 \
            /d:sonar.issue.ignore.multicriteria.e1.ruleKey=csharpsquid:S1125 \
            "/d:sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.cs" \
            /d:sonar.issue.ignore.multicriteria.e2.ruleKey=csharpsquid:S6781 \
            "/d:sonar.issue.ignore.multicriteria.e2.resourceKey=**/*.cs" \
          
      - name: Build solution
        run: dotnet build AuctionSystem.sln --configuration Release --no-restore

      - name: Run Unit Tests with coverage
        run: |
          dotnet test UnitTests/UnitTests.csproj --configuration Release --no-build \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            /p:CoverletOutput="${{ github.workspace }}/unit-coverage.opencover.xml"

      - name: Run Integration Tests with coverage
        run: |
          dotnet test IntegrationTests/IntegrationTests.csproj --configuration Release --no-build \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            /p:CoverletOutput="${{ github.workspace }}/integration-coverage.opencover.xml"

      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
