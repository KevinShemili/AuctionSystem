name: SonarCloud

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual workflow runs

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Install SonarCloud scanner
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
        
    - name: Begin SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Generated from SonarCloud project
      run: |
        dotnet-sonarscanner begin /k:"KevinShemili_AuctionSystem" \
        /o:"kevinshemili" \
        /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
        /d:sonar.host.url="https://sonarcloud.io" \
        /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml \
        /d:sonar.coverage.exclusions="**Tests*.cs,**/obj/**,**/*.dll,**/bin/**" \
        /d:sonar.exclusions="**/obj/**,**/*.dll,**/bin/**,**Tests*.cs"
    
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet build AuctionSystem.sln --configuration Release
        
    - name: Test with coverage
      run: |
        dotnet-coverage collect 'dotnet test UnitTests/UnitTests.csproj --configuration Release' -f xml -o coverage.xml
        
    - name: End SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
