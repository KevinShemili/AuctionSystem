name: CI Build and Test

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build & Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Restore Dependencies
      run: dotnet restore AuctionSystem.sln
      
    - name: Build
      run: dotnet build AuctionSystem.sln --configuration Release --no-restore
      
    - name: Run Unit Tests
      run: dotnet test UnitTests/UnitTests.csproj --configuration Release --no-build --verbosity normal
    
    - name: Run Integration Tests
      run: dotnet test IntegrationTests/IntegrationTests.csproj --configuration Release --no-build --verbosity normal
    
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-24.04
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and tag Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: WebAPI/Dockerfile
        push: false
        tags: auctionsystem:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
