name: CI Build and Test

on:
  push:
    branches: [ master ]
  workflow_dispatch: # Allow manual runs

jobs:
  build-and-test: # 1st Job
    name: Build & Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }} # Use entries fom matrix
    strategy:
      matrix:
        os: [ubuntu-24.04] # Define OSs in matrix.
        
    steps: #
    - name: Checkout repository
      uses: actions/checkout@v3 # Get code from repo
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3 # setup .NET SDK
      with:
        dotnet-version: 7.0.x
        
    - name: Restore Dependencies
      run: dotnet restore AuctionSystem.sln # restore packages
      
    - name: Build
      run: dotnet build AuctionSystem.sln --configuration Release --no-restore # build in release mode, skip restore since we already did it 
      
    - name: Run Unit Tests
      run: dotnet test UnitTests/UnitTests.csproj --configuration Release --no-build --verbosity normal # run unit tests
    
    - name: Run Integration Tests
      run: dotnet test IntegrationTests/IntegrationTests.csproj --configuration Release --no-build --verbosity normal # run integration tests
    
    - name: Cache NuGet packages
      uses: actions/cache@v3 # cache packages for future efficiency
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
  docker-build: # 2nd job, build docker image
    name: Build Docker Image
    runs-on: ubuntu-24.04
    needs: build-and-test # only runs if 1st job is successful
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3 # Get code from repo
      
    - name: Build and tag Docker image
      uses: docker/build-push-action@v4 # build image
      with:
        context: .
        file: WebAPI/Dockerfile # locate file
        push: false # only build do not push
        tags: auctionsystem:latest # name & tag
