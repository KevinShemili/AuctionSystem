version: "3.8"

services:

  postgresdb:
    container_name: postgresdb
    image: postgres:17.4
    restart: always
    environment:
        POSTGRES_DB: AuctionSystemDB
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auctionnetwork

  pgadmin: 
    container_name: pgadmin4
    image: dpage/pgadmin4:9.3.0
    restart: always
    ports:
      - "5050:80"
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - postgresdb
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - auctionnetwork

  auctionsystem:
    container_name: AuctionSystem
    image: auctionsystem
    build:
      context: .
      dockerfile: WebAPI/Dockerfile
    environment:
        ASPNETCORE_ENVIRONMENT: Docker
        ASPNETCORE_URLS: "http://+:80"
    depends_on:
      - postgresdb
    ports:
      - "8080:80"
    networks:
      - auctionnetwork
    volumes:
      - auction_uploads:/app/wwwroot/uploads/auctions

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.18.0    
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - auctionnetwork

  kibana:
    container_name: kibana
    image: kibana:8.18.0
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - auctionnetwork

networks:
  auctionnetwork:
    driver: bridge 

volumes:
   postgres_data:
   pgadmin-data:
   es_data:
   auction_uploads:
